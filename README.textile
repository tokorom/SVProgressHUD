h1. SVProgressHUD

SVProgressHUD is a clean, lightweight and unobstruptive progress HUD for iOS. It's a simplified and prettyfied alternative to the popular "MBProgressHUD":https://github.com/jdg/MBProgressHUD. Its fade in/out animations are highly inspired on Lauren Britcher's HUD in Tweetie for iOS. The success and error icons are from "Glyphish":http://glyphish.com/.


!http://samvermette.com/files/svprogresshud3.png!

SVProgressHUD features:

* very simple singleton convenience methods
* optional loading, success and error status messages
* automatic centering based on device type, orientation, and optional @posY@ parameter
* automatic masking any touch operations, ana optional @mask@ parameter

h2. Installation

* Drag the @SVProgressHUD/SVProgressHUD@ folder into your project. 
* Add the *QuartzCore* framework to your project. 

__If you plan on using SVProgressHUD in a lot of places inside your app, I recommend importing it directly inside your prefix file.__

h2. Usage

(see sample Xcode project in @/Sample@)

SVProgressHUD is created as a singleton (i.e. it doesn't need to be explictely allocated and instantiated) and can be shown with the following class methods, depending on the customization level you need to achieve:

<pre>
+ (void)show;
+ (void)showInView:(UIView*)view;
+ (void)showInView:(UIView*)view status:(NSString*)string;
+ (void)showInView:(UIView*)view status:(NSString*)string mask:(BOOL)b;
+ (void)showInView:(UIView*)view status:(NSString*)string posY:(CGFloat)posY mask:(BOOL)b;
</pre>

You dismiss it using one of these:

<pre>
+ (void)dismiss;
+ (void)dismissWithSuccess:(NSString*)successString;
+ (void)dismissWithError:(NSString*)errorString;
</pre>

If you're using SVProgressHUD to show the status of a many-steps operation, you can also change the HUD status __while__ it's showing with:

<pre>
+ (void)setStatus:(NSString*)string;
</pre>
